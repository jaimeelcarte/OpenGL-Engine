#version 430 core
#extension GL_ARB_compute_shader : enable
#extension FL_ARB_shader_storage_buffer_object : enable

layout(std140, binding = 4) buffer Pos
{
	vec4 Positions[];	// array of structures
};

layout(std140, binding = 8) buffer { atomic_uint Ranks[] };

layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;


void main()
{
	uint gid = gl_GlobalInvocationID.x; // the .y and .z are both 1 in this case
	vec3 pGid = Positions[gid].xyz;
	vec3 pI;
	if (gid != 0)
	{
		for (int i = 0; i < gid; ++i)
		{
			pI = Positions[i].xyz;

			if (pI.z < pGid.z) atomicCounterIncrement(Ranks[gid]);
			else atomicCounterIncrement(Ranks[i]);
		}
	}

}
